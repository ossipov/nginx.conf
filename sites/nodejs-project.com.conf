proxy_cache_path /var/www/_nginx_cache/nodeprj levels=1:2 keys_zone=nodeprj_imgs:10m inactive=24h max_size=5G;

server {
 listen 80;
 server_name api.nodejs-project.com;
 return 301 https://$server_name$request_uri;
}

server {
 listen 80;
 server_name nodejs-project.com;
 return 301 https://$server_name$request_uri;
}

#
# api.nodejs-project.com
#
server {
  listen 443 ssl http2;
  server_name api.nodejs-project.com;
  charset utf-8;

  index index.html;

  # SSL|TLS: /.well-known/acme-challenge
  include mixins/acme-challenge.conf;

  # proxy to node.js project on a localhost
  location / {
    proxy_pass http://127.0.0.1:1337/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;    
  }                  
                   
  location = /favicon.ico { access_log off; log_not_found off; }   
  location = /robots.txt  { access_log off; log_not_found off; }   

  ssl_certificate     /etc/nginx/ssl/nodejs-project.com/fullchain;
  ssl_certificate_key /etc/nginx/ssl/nodejs-project.com/key;

  include mixins/headers.conf;
  include mixins/ssl.conf;
}

#
# nodejs-project.com
#
server {             
  listen 443 ssl http2;            
  server_name nodejs-project.com;
  
  index index.html;
  charset utf-8;
  
  # access_log /var/log/nginx/$server_name-access.log;
  # error_log  /var/log/nginx/$server_name-error.log;
  
  sendfile off;              
  client_max_body_size 1m;

  # SSL|TLS: /.well-known/acme-challenge
  include mixins/acme-challenge.conf;

  # deployment script
  location = /f9e91dedd4f4ff09b.php {
    include fastcgi.conf;
    fastcgi_param  SCRIPT_FILENAME /var/www/nodejs-project.com/deploy.php;
    fastcgi_pass php-fpm;
  }
                 
  # proxy to node.js project on a localhost
  location / {
    proxy_pass http://127.0.0.1:8090/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;    
  }                  
                   
  location = /favicon.ico { access_log off; log_not_found off; }   
  location = /robots.txt  { access_log off; log_not_found off; }   
                   
  location ~ /images/u/sm|md|lg/ {
    proxy_pass http://localhost:8081;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header Host $host;
		proxy_cache_bypass $cookie_auth_tkt;
    proxy_no_cache $cookie_auth_tkt;
    proxy_cache_key $host$scheme$proxy_host$request_uri;
    proxy_cache nodeprj_imgs;
    proxy_cache_valid  200 24h;
    proxy_cache_valid  404 415 1m;
  }

  ssl_certificate   /etc/nginx/ssl/nodejs-project.com/fullchain;
  ssl_certificate_key /etc/nginx/ssl/nodejs-project.com/key;
  include mixins/ssl.conf;
}


#
# Image server
#
server {
  listen 8081;
  # path to uploaded images
  root /var/www/nodejs-project.com/images;
  error_log /var/log/nginx/error_debug.log debug;
  rewrite_log on;

  if ($uri ~ ^/images/u/sm/) {
    set $w "-";
    set $h 10;
  }

  if ($uri ~ ^/images/u/md/) {
    set $w "-";
    set $h 300;
  }

  if ($uri ~ ^/images/u/lg/) {
    set $w "-";
    set $h 500;
  }

  location = / {
    add_header Content-type text/plain;
    return 200 ":)";
  }

  location ~ ^/images/u/sm|md|lg/.*\.(?:jpg|gif|png)$ {
    rewrite ^/images/u/(sm|md|lg)/(.*)$ /$2;

    if (!-f $request_filename) {
      rewrite ^.*$ /notfound last;
    }

    image_filter resize $w $h;
    break;
  }

  location = /notfound {
    return 404;
  }
}
